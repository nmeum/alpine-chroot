#!/bin/sh
# Tool for running abuild(1) in a chroot.

set -e

##
# Global variables
##

APKBUILD="${APKBUILD:-./APKBUILD}"
. /usr/share/abuild/functions.sh

##
# Functions
##

chroot_conf() {
	root="${1}"
	arch="$(chroot "${root}" /bin/uname -m)"

	chroot "${root}" /bin/sh -c "apk add git abuild build-base"
	[ "$(uname -m)" = "${arch}" ] || \
		echo "CARCH=${ARCH}" >> "${root}"/etc/abuild.conf

	chroot "${root}" /usr/sbin/adduser \
		-s /bin/sh -D -G abuild buildozer

	mkdir -p "${root}"/home/buildozer/packages \
		"${root}"/home/buildozer/aports \
		"${root}"/home/buildozer/.abuild

	mkdir -p "${REPODEST}"
	chmod 770 "${REPODEST}" && chgrp abuild "${REPODEST}"

	cp "${ABUILD_CONF}" "${root}"/etc/abuild.conf
	echo "ABUILD_USERCONF=/tmp/abuild.conf" >> \
		"${root}"/etc/abuild.conf
	mount -o ro --bind "${ABUILD_USERDIR}" \
		"${root}"/home/buildozer/.abuild

	cp "${ABUILD_USERCONF}" "${root}"/tmp/abuild.conf.orig
	echo ". /tmp/abuild.conf.orig" \
		> "${root}"/tmp/abuild.conf

	echo "ABUILD_USERDIR=/home/buildozer/.abuild" \
		>> "${root}"/tmp/abuild.conf
	echo "REPODEST=/home/buildozer/packages" \
		>> "${root}"/tmp/abuild.conf
	echo "SRCDEST=/var/cache/distfiles" \
		>> "${root}"/tmp/abuild.conf

	mount --bind "${APORTSDIR}" "${root}"/home/buildozer/aports
	mount --bind "${REPODEST}"  "${root}"/home/buildozer/packages
	mount --bind "${SRCDEST}"   "${root}"/var/cache/distfiles
}

chroot_build() {
	local root="${1}"
	local dir="$(pwd)"

	dir="${dir##*$APORTSDIR}"
	case "${dir}" in
		/*) dir="${dir#*/}" ;;
	esac

	shift
	chroot "${root}" /usr/bin/su - buildozer \
		-c "cd aports/${dir} && abuild ${@}"
}

##
# Go for it!
##

[ $# -lt 1 ] && \
	die "USAGE: ${0##*/} CHROOT [OPTIONS]"

[ $(id -u) -ne 0 ] && \
	die "${0##*/} has to be started as root."

[ -e "${APORTSDIR}" ] || \
	die "Could not locate \$APORTSDIR"

chroot="${1}"
if [ ! -d "${chroot}" ]; then
	echo "Chroot '${chroot}' doesn't exist." 1>&2
	exit 1
fi

# TODO: Don't run this unconditionally
chroot_conf "${chroot}"

if [ $# -ge 2 ]; then
	shift
	chroot_build "${chroot}" $@
else
	chroot_build "${chroot}" -r all
fi
