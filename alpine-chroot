#!/bin/sh
# Chroots into an existing alpine chroot.

set -e

##
# Variables
##

CHROOT=/usr/sbin/chroot
USER=root

##
# Functions
##

mount_me_maybe() {
	mountpoint="${1}"
	shift

	busybox mountpoint -q "${mountpoint}" && return
	mount "$@" "${mountpoint}"
}

##
# Go for it!
##

if [ $(id -u) -ne 0 ]; then
	echo "${0##*/} has to be started as root." 1>&2
	exit 1
fi

while getopts u: flag; do
	case "${flag}" in
		u) USER="${OPTARG}" ;;
	esac
done

shift $((OPTIND - 1))
if [ $# -lt 1 ]; then
	echo "USAGE: ${0##*/} [-u USER] CHROOT [COMMAND]" 1>&2
	exit 1
fi

chrootdir="${1}"
if [ $# -eq 1 ]; then
	set -- /bin/su -l "${USER}"
else
	shift
fi

mount_me_maybe "${chrootdir}"/proc -t proc none
mount_me_maybe "${chrootdir}"/dev  --rbind /dev
mount_me_maybe "${chrootdir}"/sys  --rbind /sys
mount_me_maybe "${chrootdir}"/run  --rbind /run

# TODO: properly handle /etc/resolv.conf

exec env -i "${CHROOT}" "${chrootdir}" "$@"
